{"version":3,"sources":["components/pages/Home.jsx","components/pages/Register.jsx","components/pages/Login.jsx","components/EditEntryForm.jsx","components/EntryCard.jsx","components/EntriesDeck.jsx","components/AddEntryForm.jsx","components/pages/Safe.jsx","components/Header.jsx","components/Footer.jsx","components/App.jsx","index.js"],"names":["Home","to","Register","props","history","useHistory","emailValidation","emptyRegistration","email","password","passwordConfirmation","useState","registration","setRegistration","notification","setNotification","updateRegistration","event","target","name","value","previousState","placeholder","type","onChange","onClick","test","fetch","serverPath","JSON","stringify","then","response","text","data","signin","preventDefault","Login","emptyLogin","login","setLogin","updateLogin","method","headers","console","log","EditEntryForm","emptyForm","_id","title","link","open","setOpen","entryInfo","setEntryInfo","handleChange","handleClose","IconButton","entry","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogContent","TextField","autoFocus","margin","label","autoComplete","fullWidth","DialogActions","Button","color","onSubmit","useStyles","makeStyles","root","minWidth","fontSize","info","EntryCard","classes","Card","className","CardContent","Typography","content","CardActions","onDelete","onEdit","theme","flexGrow","paper","padding","spacing","textAlign","palette","secondary","EntriesDeck","deleteEntry","editEntry","Grid","container","entries","map","item","xs","AddEntryForm","variant","Safe","setEntries","useEffect","push","json","Header","Footer","year","Date","getFullYear","App","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ac1efa78.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction Home() {\r\n    return (\r\n        <div>\r\n            <h1>Home</h1>\r\n            <Link to=\"/register\"><button>Register</button></Link>\r\n            <Link to=\"/login\"><button>Log in</button></Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Register(props) {\r\n    const history = useHistory();\r\n    const emailValidation = /(.+)@(.+){2,}\\.(.+){2,}/;\r\n    const emptyRegistration = {\r\n        email: \"\",\r\n        password: \"\",\r\n        passwordConfirmation: \"\"\r\n    };\r\n    const serverPath = \"https://gabes-safe-server.herokuapp.com\";\r\n\r\n    let [registration, setRegistration] = useState(emptyRegistration);\r\n    let [notification, setNotification] = useState(\"\");\r\n\r\n    function updateRegistration(event) {\r\n        const { name, value } = event.target;\r\n        setRegistration(previousState => ({ ...previousState, [name]: value }));\r\n    }\r\n\r\n    function register(event) {\r\n        if (registration.email === \"\" ||\r\n            registration.password === \"\" ||\r\n            registration.passwordConfirmation === \"\") {\r\n            setNotification(\"Please fill out all fields.\");\r\n        } else if (!emailValidation.test(registration.email)) {\r\n            setNotification(\"Invalid email.\");\r\n            setRegistration(emptyRegistration);\r\n        } else if (registration.password !== \r\n                registration.passwordConfirmation) {\r\n                setNotification(\"Passwords don't match.\");\r\n                setRegistration(emptyRegistration);\r\n        } else {\r\n            fetch(serverPath + \"/register\", {\r\n                \"method\": \"POST\",\r\n                \"headers\": {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Accept\": \"application/json\"\r\n                },\r\n                \"body\": JSON.stringify({\r\n                    \"email\": registration.email,\r\n                    \"password\": registration.password\r\n                })\r\n            })\r\n                .then(response => response.text())\r\n                .then(data => {\r\n                    if(data === \"User already exists.\") {\r\n                        setNotification(data);\r\n                        setRegistration(emptyRegistration);\r\n                    } else if(data === \"User created.\") {\r\n                        setNotification(data);\r\n                        props.signin(registration.email, history);\r\n                    } else {\r\n                        setNotification(\"Error, please try again.\");\r\n                        setRegistration(emptyRegistration);\r\n                    }\r\n                });\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Register</h1>\r\n            <form>\r\n                <input \r\n                    name=\"email\" \r\n                    placeholder=\"Email\"\r\n                    type=\"email\"\r\n                    value={registration.email}\r\n                    onChange={updateRegistration}\r\n                />\r\n\r\n                <input \r\n                    name=\"password\" \r\n                    placeholder=\"Password\"\r\n                    type=\"password\"\r\n                    value={registration.password}\r\n                    onChange={updateRegistration}\r\n                />\r\n\r\n                <input \r\n                    name=\"passwordConfirmation\" \r\n                    placeholder=\"Confirm your password\"\r\n                    type=\"password\"\r\n                    value={registration.passwordConfirmation}\r\n                    onChange={updateRegistration}\r\n                />\r\n                \r\n                <button onClick={register}>Register</button>\r\n            </form>\r\n\r\n\r\n            <p>{notification}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Register;","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Login(props) {\r\n    let history = useHistory();\r\n    const emailValidation = /(.+)@(.+){2,}\\.(.+){2,}/;\r\n    const emptyLogin = {\r\n        email: \"\",\r\n        password: \"\"\r\n    };\r\n    const serverPath = \"https://gabes-safe-server.herokuapp.com\";\r\n\r\n    let [notification, setNotification] = useState(\"\");\r\n    let [login, setLogin] = useState(emptyLogin);\r\n\r\n    function updateLogin(event) {\r\n        const { name, value } = event.target;\r\n        setLogin(previousState => ({...previousState, [name]: value}));\r\n    }\r\n\r\n    function attemptLogin(event) {\r\n        if(login.email === \"\" || \r\n            login.password === \"\") {\r\n            setNotification(\"Please fill out all fields.\");\r\n        } else if(!emailValidation.test(login.email)) {\r\n            setNotification(\"Invalid email.\");\r\n            setLogin(emptyLogin);\r\n        }else {\r\n            fetch(serverPath + \"/login\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\"\r\n            },\r\n            \"body\": JSON.stringify({\r\n                \"email\": login.email,\r\n                \"password\": login.password\r\n            })\r\n        })\r\n            .then(response => response.text())\r\n            .then(data => {\r\n                if (data === \"User not found.\") {\r\n                    setNotification(data);\r\n                    setLogin(emptyLogin);\r\n                } else if (data === \"Invalid password.\") {\r\n                    setNotification(data);\r\n                    setLogin(emptyLogin);\r\n                } else if (data === \"Login successful.\") {\r\n                    props.signin(login.email, history);\r\n                    // App will use argument as a prop to Safe jsx.\r\n                } else {\r\n                    console.log(\"Unrecognized return from server.\");\r\n                    setLogin(emptyLogin);\r\n                }\r\n            });\r\n        }\r\n        event.preventDefault();\r\n    }\r\n        \r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n\r\n            <form>\r\n                <input\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    type=\"email\"\r\n                    value={login.email}\r\n                    onChange={updateLogin}\r\n                />\r\n\r\n                <input\r\n                    name=\"password\"\r\n                    placeholder=\"Password\"\r\n                    type=\"password\"\r\n                    value={login.password}\r\n                    onChange={updateLogin}\r\n                />\r\n\r\n                <button onClick={attemptLogin}>Login</button>\r\n            </form>\r\n\r\n            <p>{notification}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n        ","import React, { useState } from 'react';\r\nimport {Button, TextField, Dialog, DialogActions, DialogContent, DialogTitle, \r\n  IconButton} from '@material-ui/core';\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\n function EditEntryForm(props) {\r\n  const emptyForm = {\r\n    _id: \"\",\r\n    title: \"\",\r\n    link: \"\",\r\n    login: \"\",\r\n    password: \"\"\r\n  };\r\n\r\n  let [open, setOpen] = useState(false);\r\n  let [entryInfo, setEntryInfo] = useState(emptyForm);\r\n\r\n  function handleChange (event) {\r\n    const {name, value} = event.target;\r\n    setEntryInfo((previousState) => ({...previousState, [name]: value}));\r\n  }\r\n\r\n  const handleClickOpen = () => {\r\n    setEntryInfo(props.entry);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setEntryInfo(emptyForm);\r\n    setOpen(false);\r\n  };\r\n\r\n  function handleSubmit () {\r\n    props.onSubmit(entryInfo);\r\n    handleClose();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <IconButton onClick={handleClickOpen}>\r\n          <EditIcon />\r\n      </IconButton>\r\n\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Edit password</DialogTitle>\r\n\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"title\"\r\n            label=\"Title\"\r\n            name=\"title\"\r\n            autoComplete=\"off\"\r\n            type=\"text\"\r\n            onChange={handleChange}\r\n            value={entryInfo.title}\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n\r\n        <DialogContent>\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"userName\"\r\n            label=\"Login\"\r\n            name=\"login\"\r\n            autoComplete=\"off\"\r\n            type=\"text\"\r\n            onChange={handleChange}\r\n            value={entryInfo.login}\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n\r\n        <DialogContent>\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"password\"\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            autoComplete=\"off\"\r\n            type=\"password\"\r\n            onChange={handleChange}\r\n            value={entryInfo.password}\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n\r\n        <DialogContent>\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"link\"\r\n            label=\"Website link\"\r\n            name=\"link\"\r\n            autoComplete=\"off\"\r\n            type=\"url\"\r\n            onChange={handleChange}\r\n            value={entryInfo.link}\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleSubmit} color=\"primary\">\r\n            Submit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditEntryForm;","import React from \"react\";\r\nimport {Card, CardContent, CardActions, IconButton, Typography} \r\n  from \"@material-ui/core\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditEntryForm from \"./EditEntryForm\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  label: {\r\n    fontSize: 14,\r\n    color: \"#4b7bec\"\r\n  },\r\n  info: {\r\n    fontSize: 18,\r\n    color: \"#4b6584\"\r\n  }\r\n});\r\n\r\nfunction EntryCard(props) {\r\n  function deleteEntry() {\r\n    props.onDelete(props.content._id);\r\n  }\r\n\r\n  function editEntry(entry) {\r\n    props.onEdit(entry);\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  return(\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography className={classes.label}>\r\n          Title\r\n        </Typography>\r\n\r\n        <Typography className={classes.info}>\r\n          {props.content.title}\r\n        </Typography>\r\n\r\n        <Typography className={classes.label}>\r\n          Link\r\n        </Typography>\r\n\r\n        <Typography className={classes.info}>\r\n          {props.content.link}\r\n        </Typography>\r\n\r\n        <Typography className={classes.label}>\r\n          Login\r\n        </Typography>\r\n\r\n        <Typography className={classes.info}>\r\n          {props.content.login}\r\n        </Typography>\r\n\r\n        <Typography className={classes.label}>\r\n          Password\r\n        </Typography>\r\n\r\n        <Typography className={classes.info}>\r\n          {props.content.password}\r\n        </Typography>\r\n        \r\n        \r\n        \r\n        \r\n      </CardContent>\r\n      <CardActions>\r\n        <IconButton onClick={deleteEntry}>\r\n          <DeleteIcon />\r\n        </IconButton>\r\n\r\n        <EditEntryForm entry={props.content} onSubmit={editEntry}/>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default EntryCard;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport EntryCard from \"./EntryCard\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary\r\n  }\r\n}));\r\n\r\nfunction EntriesDeck(props) {\r\n  const classes = useStyles();\r\n\r\n  function deleteEntry(entry) {\r\n    props.onDelete(entry);\r\n  }\r\n\r\n  function editEntry(entry) {\r\n    props.onEdit(entry);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        {props.entries.map((entry) => {\r\n            return(\r\n              <Grid key={entry._id + \"grid\"} item xs={3}>\r\n                <EntryCard \r\n                  key={entry._id} \r\n                  content={entry} \r\n                  onDelete={deleteEntry}\r\n                  onEdit={editEntry}\r\n                />\r\n              </Grid>\r\n            )\r\n        })}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EntriesDeck;","import React, { useState } from 'react';\r\nimport {Button, TextField, Dialog, DialogActions, DialogContent, DialogTitle} \r\n  from '@material-ui/core';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\n function AddEntryForm(props) {\r\n  const emptyForm = {\r\n    title: \"\",\r\n    link: \"\",\r\n    login: \"\",\r\n    password: \"\"\r\n  };\r\n\r\n  let [open, setOpen] = useState(false);\r\n  let [entryInfo, setEntryInfo] = useState(emptyForm);\r\n  let [notification, setNotification] = useState(\"\"); \r\n\r\n  function handleChange (event) {\r\n    const {name, value} = event.target;\r\n    setEntryInfo((previousState) => ({...previousState, [name]: value}));\r\n  }\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setEntryInfo(emptyForm);\r\n    setOpen(false);\r\n  };\r\n\r\n  function handleAdd () {\r\n    // Check if all fields are blank\r\n    if(entryInfo.title === \"\" && entryInfo.link === \"\" && \r\n      entryInfo.login === \"\" && entryInfo.password === \"\") {\r\n      setNotification(\"Please insert some information before adding.\");\r\n    } else { // Add entry\r\n      props.onSubmit(entryInfo);\r\n      handleClose();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        <p><AddCircleIcon /> Add new password</p>\r\n      </Button>\r\n      \r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Add new password</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"title\"\r\n            label=\"Title\"\r\n            name=\"title\"\r\n            autoComplete=\"off\"\r\n            type=\"text\"\r\n            onChange={handleChange}\r\n            value={entryInfo.title}\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogContent>\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"userName\"\r\n            label=\"Login\"\r\n            name=\"login\"\r\n            autoComplete=\"off\"\r\n            type=\"text\"\r\n            onChange={handleChange}\r\n            value={entryInfo.login}\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogContent>\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"password\"\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            autoComplete=\"off\"\r\n            type=\"password\"\r\n            onChange={handleChange}\r\n            value={entryInfo.password}\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogContent>\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"link\"\r\n            label=\"Website link\"\r\n            name=\"link\"\r\n            autoComplete=\"off\"\r\n            type=\"url\"\r\n            onChange={handleChange}\r\n            value={entryInfo.link}\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <p>{notification}</p>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleAdd} color=\"primary\">\r\n            Add\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddEntryForm;","import React, { useEffect, useState } from \"react\";\r\nimport EntriesDeck from \"../EntriesDeck\";\r\nimport AddEntryForm from \"../AddEntryForm\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Safe(props) {\r\n\r\n    let history = useHistory();\r\n    let [entries, setEntries] = useState([]);\r\n    const serverPath = \"https://gabes-safe-server.herokuapp.com\";\r\n\r\n    // Get initial entries from DB.\r\n    useEffect(() => {\r\n        if(props.login === \"\") {\r\n            history.push(\"/\");\r\n        } else {\r\n            fetch(serverPath + \"/populateDeck\", {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"Accept\": \"application/json\"\r\n                    },\r\n                    \"body\": JSON.stringify({\r\n                        login: props.login\r\n                    })\r\n            }).then(response => response.json()).then(data => setEntries(data));\r\n        }\r\n    }, []);\r\n\r\n    function addEntry(entry) {\r\n        fetch(serverPath + \"/insertEntry\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Accept\": \"application/json\"\r\n                },\r\n                \"body\": JSON.stringify({\"login\": props.login, \"entry\": entry})\r\n        }).then(response => response.json()).then(data => setEntries(data));\r\n    }\r\n\r\n    function deleteEntry(entry) {\r\n        fetch(serverPath + \"/entry\", {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Accept\": \"application/json\"\r\n                },\r\n                \"body\": JSON.stringify({\"login\": props.login, \"entryId\": entry})\r\n        }).then(response => response.json()).then(data => setEntries(data));\r\n    }\r\n\r\n    function editEntry(entry) {\r\n        fetch(serverPath + \"/entry\", {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Accept\": \"application/json\"\r\n                },\r\n                \"body\": JSON.stringify({\r\n                    \"login\": props.login, \r\n                    \"updatedEntry\": entry\r\n                })\r\n        }).then(response => response.json()).then(data => setEntries(data));\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h1>Safe</h1>\r\n            <EntriesDeck \r\n                entries={entries} \r\n                onDelete={deleteEntry}\r\n                onEdit={editEntry}\r\n            />\r\n            <AddEntryForm onSubmit={addEntry}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Safe;","import React from \"react\"\r\nimport {Link} from \"react-router-dom\"\r\n\r\nfunction Header() {\r\n  return (\r\n    <header>\r\n      <Link to=\"/\"><h1>Gabe's Safe</h1></Link>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from \"react\"\r\n\r\nfunction Footer() {\r\n  const year = new Date().getFullYear();\r\n\r\n  return (\r\n    <footer>\r\n      <p>Creative Commons ⓒ {year}</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React, { useState } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport Home from \"./pages/Home\";\nimport Register from \"./pages/Register\";\nimport Login from \"./pages/Login\";\nimport Safe from \"./pages/Safe\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\n\nfunction App() {\n  let [login, setLogin] = useState(\"\");\n\n  function signin(email, history) {\n    setLogin(email);\n    history.push(\"/safe\");\n  }\n\n  return (\n    <BrowserRouter>\n      <div>\n        <Header />\n        <Switch>\n          <Route path=\"/\" exact>\n            <Home />\n          </Route>\n\n          <Route path=\"/register\">\n            <Register signin={signin}/>\n          </Route>\n\n          <Route path=\"/login\">\n            <Login signin={signin}/>\n          </Route>\n\n          <Route path=\"/safe\">\n            <Safe login={login}/>\n          </Route>\n        </Switch>\n        <Footer />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />,document.getElementById('root'));\n"],"sourceRoot":""}